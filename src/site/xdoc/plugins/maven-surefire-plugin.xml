<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Что такое Maven</title>
        <author>Ржевский Дмитрий</author>
    </properties>

    <head>
        <meta name="keyword" content="java, maven, ant, about, ява, мавен, ьфмут"/>
        <title>Что такое Maven</title>
    </head>


    <body>
        <section name="">
            <p>
            maven-surefire-plugin - плагин который запускает тесты и генерирует отчёты по результатам их выполнения.

            По умолчанию отчёты сохраняются в ${basedir}/target/surefire-reports и находятся в двух форматах - txt  и xml.

            maven-surefire-plugin содердит единственную цель surefire:test

            тесты можно писать используя как JUnit так и TestNG links.




            Пропустить выполнение тестов можно
             <source><![CDATA[
                    <configuration>
                      <skipTests>true</skipTests>
                    </configuration>]]></source>
             <source>
            или mvn install -DskipTests
            </source>

            чтобы пропустить ещё и компиляцию тестов вызовите maven так:
            <source>
            mvn install -Dmaven.test.skip=true
            </source>

            по умолчанию запускаются все тесты с такими именами
                * "**/Test*.java" - includes all of its subdirectories and all java filenames that start with "Test".
                * "**/*Test.java" - includes all of its subdirectories and all java filenames that end with "Test".
                * "**/*TestCase.java" - includes all of its subdirectories and all java filenames that end with "TestCase".
            Чтобы вручную добавлять или удалять классы тестов  можно посмотреть здесь http://maven.apache.org/plugins/maven-surefire-plugin/examples/inclusion-exclusion.html
            Запустить отдельный тест можно так:
            mvn -Dtest=TestCircle test
            имейте в виду что если вы хотите отладить тест в среде разработки то в конфигурации планина нужно выставить
             <source><![CDATA[<forkMode>never</forkMode>]]></source>
            либо запускать тесты с remotedebug
            <source>
            mvn -Dmaven.surefire.debug test
            </source>
               </p>

        </section>
        </body></document>