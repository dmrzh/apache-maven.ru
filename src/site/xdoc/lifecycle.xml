<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>жизненный цикл сборки: фазы сборки</title>
        <author>Ржевский Дмитрий</author>
    </properties>

    <head>
        <meta name="keyword" content="java, maven, ant, about, ява, мавен"/>
        <title>жизненный цикл сборки: фазы сборки</title>
    </head>


    <body>
        <section name="Основные фазы сборки проекта">
            <p>
                <ol>
                    <li>compile </li>Компилирование проекта
                    <li>test</li>Тестирование с помощью JUnit тестов
                    <li>package</li>Создание .jar файла или war, ear  в зависимости от типа проекта
                    <li>integration-test</li>Запуск интеграционных тестов
                    <li>install</li> Копирование .jar (war , ear) в <a herf="repository.html">локальный репозиторий</a>
                    <li>deploy</li> публикация файла в удалённый репозиторий
                </ol>
            </p>
            <p>
                К примеру нам нужно создать jar проекта. Чтобы его создать набираем:
                <source>mvn package</source>
                Но перед созданием jar-файла будут выполняться все предыдущие фазы    compile и  test  ,
                а фазы  integration-test, install, deploy не выполнятся.
                Если набрать  <source>mvn deploy</source> то выполнятся все приведённые выше фазы.
            </p>
            <p>
                Особняком стоят фазы  <b>clean</b> и <b>site</b>. Они не выполняются если специально не указаны в строке запуска.
                <ul>
                    <li>clean</li>удаление всех созданных в процессе сборки артефактов: .class, .jar и др. файлов.
                    В простейшем случае результат — просто удаление каталога target
                    <li>site</li>предназначена для создания документации (javadoc+сайт описания проекта)
                </ul>


                Т. к . команда mvn понимает когда ему передают несколько фаз то для сборки проекта создания документации "с нуля" выполняют:
                <source>mvn clean package site</source>
            </p>
            <p>
                С полным списком фаз и их описанием (на английском языке) можно ознакомиться  здесь
                <a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference">http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference</a>                
            </p>
          </section>
        </body>
    </document>